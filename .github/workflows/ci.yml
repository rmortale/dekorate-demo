name: ci

on:
  push:
    branches:
      - '**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONFIG_REPO_NAME: k8s-config

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=sha,format=long,prefix=

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn --file pom.xml --no-transfer-progress --batch-mode clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: copy files for upload
        run: |
          mkdir dekorate-demo
          cp target/classes/META-INF/dekorate/kubernetes.yml dekorate-demo
          cp ${{ env.DOCKER_METADATA_OUTPUT_BAKE_FILE_TAGS }} dekorate-demo

      - name: save manifests
        uses: actions/upload-artifact@v4
        with:
          name: manifests
          retention-days: 5
          path: dekorate-demo


  promote-to-upper-environment:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: manifests
          path: k8s

      - name: Check out config repo
        run: |
          echo "promoting into upper environment!"
          echo "gh sha: ${{ github.sha }}"
          git config --global user.email ci-bot@argocd.com && git config --global user.name ci-bot
          echo "cloning config repo $CONFIG_REPO_NAME"
          git clone https://oauth2:${{ secrets.GH_PAT }}@github.com/${{ github.repository_owner }}/$CONFIG_REPO_NAME.git
          cd $CONFIG_REPO_NAME
          echo "checkout main branch"
          git checkout main
          mkdir -p k8s/dekorate-demo
          cp ../k8s/* k8s/dekorate-demo/
          find ../k8s
          
          git add . && git commit -m "update image tag"
          git push --all origin

        
          
          

#          sed -i "s,image:.*,image:\ ${{ env.REGISTRY }}/${{ github.repository }}/${{ github.sha }}," k8s/manifests/dekorate-demo/kubernetes.yml
#          cat k8s/manifests/dekorate-demo/kubernetes.yml
#          git add . && git commit -m "update image tag"
#          git push --all origin


